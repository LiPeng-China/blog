import{_ as p,X as l,Y as o,$ as n,a0 as a,a1 as t,Z as e,F as i}from"./framework-bf6cbb95.js";const c="/blog/assets/CSS语法-58449fe8.png",u="/blog/assets/DOM查找元素-73714252.png",r="/blog/assets/XML实体引用-5743f2a4.png",d="/blog/assets/响应头-eed4425d.png",k="/blog/assets/Servlet架构-5ceacdd6.png",v="/blog/assets/Servlet执行流程-2deff615.png",m="/blog/assets/Servlet体系结构-7de512ca.png",g="/blog/assets/Request继承结构-87420b38.png",h="/blog/assets/Response继承结构-8d5c40c5.png",b="/blog/assets/登录和注册-0b1a47f6.png",q="/blog/assets/JSP注释-f525ce5b.png",f="/blog/assets/JSP指令-4c36a04f.png",x="/blog/assets/JSP隐含对象-602cc9ca.png",y="/blog/assets/域对象-f06effd9.png",S="/blog/assets/MVC-f81e9a1a.png",_="/blog/assets/三层架构-612f2442.png",w="/blog/assets/Cookie原理分析图-0d328d1b.png",j="/blog/assets/Session原理-f3f7b1b6.png",M="/blog/assets/监听器-3580924e.png",T="/blog/assets/Ajax如何工作-3ae7644a.png",R="/blog/assets/同步请求和异步请求-a3f9b0cd.png",C="/blog/assets/MVVM-e69cd77b.png",E="/blog/assets/Vue生命周期-16e4c08e.png",L={},J=e(`<h2 id="一、html" tabindex="-1"><a class="header-anchor" href="#一、html" aria-hidden="true">#</a> 一、HTML</h2><h3 id="_1、概述" tabindex="-1"><a class="header-anchor" href="#_1、概述" aria-hidden="true">#</a> 1、概述</h3><ul><li><p>HTML 是用来写网页的语言，HyperText Markup Language 超文本标记语言。</p><ul><li><p>超文本：超越文本的限制，还可以去定义音频，视频，图片....</p></li><li><p>标记语言：由标签构成 <code>&lt;html&gt;&lt;/html&gt;</code></p></li></ul></li></ul><h3 id="_2、w3c" tabindex="-1"><a class="header-anchor" href="#_2、w3c" aria-hidden="true">#</a> 2、W3C</h3><ul><li><p>W3C:W3C是万维网联盟,定义了网页由三部分组成</p><ul><li><p>结构：HTML 语言，基础框架</p></li><li><p>表现：CSS 语言，控制界面的美观和排版</p></li><li><p>行为：JavaScript 语言，相当于是方法可以去做一些跳转</p></li></ul></li></ul><h3 id="_3、标签" tabindex="-1"><a class="header-anchor" href="#_3、标签" aria-hidden="true">#</a> 3、标签</h3><h4 id="_3-1、基础标签" tabindex="-1"><a class="header-anchor" href="#_3-1、基础标签" aria-hidden="true">#</a> 3.1、基础标签</h4><ul><li>标题标签</li><li>段落标签</li><li>样式标签</li><li>加粗、斜体、下划线</li><li>换行标签</li></ul><h4 id="_3-2、图片标签" tabindex="-1"><a class="header-anchor" href="#_3-2、图片标签" aria-hidden="true">#</a> 3.2、图片标签</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">&quot;</span>图片路径<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-3、表格标签" tabindex="-1"><a class="header-anchor" href="#_3-3、表格标签" aria-hidden="true">#</a> 3.3、表格标签</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>1</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>caption</span><span class="token punctuation">&gt;</span></span>标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>caption</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>表头1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>表头2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>col1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>col2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-4、列表标签" tabindex="-1"><a class="header-anchor" href="#_3-4、列表标签" aria-hidden="true">#</a> 3.4、列表标签</h4><ol><li><p>无序列表</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>苹果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>西瓜<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>有序列表</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>张三<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>李四<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h4 id="_3-5、布局标签" tabindex="-1"><a class="header-anchor" href="#_3-5、布局标签" aria-hidden="true">#</a> 3.5、布局标签</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-6、媒体标签" tabindex="-1"><a class="header-anchor" href="#_3-6、媒体标签" aria-hidden="true">#</a> 3.6、媒体标签</h4><ol><li><p>音频</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>音频路径<span class="token punctuation">&quot;</span></span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>controls<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>视频</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>视频路径<span class="token punctuation">&quot;</span></span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>controls<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h4 id="_3-7、表单标签" tabindex="-1"><a class="header-anchor" href="#_3-7、表单标签" aria-hidden="true">#</a> 3.7、表单标签</h4><ul><li>form 属性 <ul><li>action：指定数据提交路径</li><li>method：get post</li></ul></li><li>input 属性 <ul><li>type：输入属性 <ul><li>text：文本</li><li>password：密文</li><li>radio：单选</li><li>checkbox：复选</li></ul></li><li>value：默认值</li><li>readonly：只读</li><li>disabled：禁用</li><li>size：大小</li></ul></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">&gt;</span></span>
    账号 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>账号<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>admin<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
    密码 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>密码<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>******<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>登录<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>注册<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-8、超链接标签" tabindex="-1"><a class="header-anchor" href="#_3-8、超链接标签" aria-hidden="true">#</a> 3.8、超链接标签</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">herf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://www.baidu.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-9、下拉框标签" tabindex="-1"><a class="header-anchor" href="#_3-9、下拉框标签" aria-hidden="true">#</a> 3.9、下拉框标签</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>price<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>价格优先<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>count<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>销量优先<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>good<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>好评优先<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-10、按钮标签" tabindex="-1"><a class="header-anchor" href="#_3-10、按钮标签" aria-hidden="true">#</a> 3.10、按钮标签</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;登录成功&#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-11、文本域标签" tabindex="-1"><a class="header-anchor" href="#_3-11、文本域标签" aria-hidden="true">#</a> 3.11、文本域标签</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、css" tabindex="-1"><a class="header-anchor" href="#二、css" aria-hidden="true">#</a> 二、CSS</h2><h3 id="_1、概述-1" tabindex="-1"><a class="header-anchor" href="#_1、概述-1" aria-hidden="true">#</a> 1、概述</h3><ul><li>Cascading Style Sheets，层叠样式表</li><li>控制网页表现的一门语言；</li></ul><h3 id="_2、快速开始" tabindex="-1"><a class="header-anchor" href="#_2、快速开始" aria-hidden="true">#</a> 2、快速开始</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">body</span><span class="token punctuation">{</span>
        <span class="token property">background</span><span class="token punctuation">:</span> lightblue<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、语法" tabindex="-1"><a class="header-anchor" href="#_3、语法" aria-hidden="true">#</a> 3、语法</h3><figure><img src="`+c+`" alt="image-20231124152601640" tabindex="0" loading="lazy"><figcaption>image-20231124152601640</figcaption></figure><h3 id="_4、css-选择器" tabindex="-1"><a class="header-anchor" href="#_4、css-选择器" aria-hidden="true">#</a> 4、CSS 选择器</h3><ul><li><p>元素选择器：根据元素名称来选择 HTML 元素</p></li><li><p>id 选择器：使用 HTML 元素的 id 属性来选择特定元素</p><ul><li><p>id 唯一，不能以数字开头</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">#idName</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>类选择器：选择有特定 class 属性的 HTML 元素</p><ul><li><p>className 不唯一</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.className</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>指定只有特定 HTML 元素会受影响：元素名称 .className</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p.className</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>通用选择器</p></li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、css-导入" tabindex="-1"><a class="header-anchor" href="#_5、css-导入" aria-hidden="true">#</a> 5、CSS 导入</h3><ul><li><p>外部 CSS</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mystyle.css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>内部 CSS</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
	<span class="token selector">body</span> <span class="token punctuation">{</span>
      <span class="token property">background-color</span><span class="token punctuation">:</span> linen<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector">h1</span> <span class="token punctuation">{</span>
      <span class="token property">color</span><span class="token punctuation">:</span> maroon<span class="token punctuation">;</span>
      <span class="token property">margin-left</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>行内 CSS</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>一级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>段落<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>层叠顺序</p><ol><li>行内样式</li><li>外部和内部样式表</li><li>浏览器默认</li></ol></li></ul><h2 id="三、javascript" tabindex="-1"><a class="header-anchor" href="#三、javascript" aria-hidden="true">#</a> 三、JavaScript</h2><h3 id="_1、概述-2" tabindex="-1"><a class="header-anchor" href="#_1、概述-2" aria-hidden="true">#</a> 1、概述</h3><ul><li>JavaScript 数据 HTML 和 Web 的编程语言；</li><li>控制页面动态变化</li></ul><h3 id="_2、使用" tabindex="-1"><a class="header-anchor" href="#_2、使用" aria-hidden="true">#</a> 2、使用</h3><h4 id="_2-1、内部脚本" tabindex="-1"><a class="header-anchor" href="#_2-1、内部脚本" aria-hidden="true">#</a> 2.1、内部脚本</h4><ul><li><p>head 中使用</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>body 中使用：可改善显示速度因为脚本编译会拖慢显示速度</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_2-2、外部脚本" tabindex="-1"><a class="header-anchor" href="#_2-2、外部脚本" aria-hidden="true">#</a> 2.2、外部脚本</h4><ul><li><p>把所有的 js 内容放在外部 js 文件中，在需要使用的地方引用</p></li><li><p>外部文件的扩展名 .js</p></li><li><p>已缓存的 js 文件可以加速页面加载</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myscript.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="_3、基本使用" tabindex="-1"><a class="header-anchor" href="#_3、基本使用" aria-hidden="true">#</a> 3、基本使用</h3><h4 id="_3-1-js-输出" tabindex="-1"><a class="header-anchor" href="#_3-1-js-输出" aria-hidden="true">#</a> 3.1 JS 输出</h4><ul><li>使用 <code>window.alert()</code> 写入警告框</li><li>使用 <code>document.write()</code> 写入 HTML 输出</li><li>使用 <code>innerHTML</code> 写入 HTML 元素</li><li>使用 <code>console.log()</code> 写入浏览器控制台</li></ul><h4 id="_3-2-js-语句" tabindex="-1"><a class="header-anchor" href="#_3-2-js-语句" aria-hidden="true">#</a> 3.2 JS 语句</h4><ul><li>JS 语句构成：值、运算符、表达式、关键词和注释；</li><li>使用 ; 结尾</li></ul><h4 id="_3-3-js-语法" tabindex="-1"><a class="header-anchor" href="#_3-3-js-语法" aria-hidden="true">#</a> 3.3 JS 语法</h4><ul><li><p>变量：使用 var 修饰</p></li><li><p>运算符、字符串：和 Java 类似</p></li><li><p>标识符：由字母、数字、_、$ 符组成，数字不能是首字母；</p></li><li><p>注释：和 Java 一样</p></li><li><p>let 关键字：改变变量的作用域</p></li><li><p>const 关键字：Java 的 final</p></li><li><p>数据类型：</p><ul><li>数值</li><li>字符串值</li><li>数组</li><li>对象</li><li>空值 和 undefined 不是一回事</li><li>== 和 === 的区别</li></ul></li><li><p>函数</p><ul><li><p>语法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">funName</span><span class="token punctuation">(</span><span class="token parameter">param1<span class="token punctuation">,</span> param2<span class="token punctuation">,</span> <span class="token operator">...</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>可以有返回值，但是不用定义返回值类型，return</p></li></ul></li><li><p>条件控制语句</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">switch</span> <span class="token punctuation">(</span>表达式<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token literal-property property">n</span> <span class="token operator">:</span>
        代码块<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token literal-property property">n</span><span class="token operator">:</span>
        代码块<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
        默认代码块<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>循环</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span>语句 <span class="token number">1</span><span class="token punctuation">;</span> 语句 <span class="token number">2</span><span class="token punctuation">;</span> 语句 <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// 要执行的代码块</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// code block to be executed</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span>variable <span class="token keyword">of</span> iterable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// code block to be executed</span>
<span class="token punctuation">}</span>

<span class="token keyword">while</span> <span class="token punctuation">(</span>条件<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 要执行的代码块</span>
<span class="token punctuation">}</span>

<span class="token keyword">do</span> <span class="token punctuation">{</span>
    <span class="token comment">// 要执行的代码块</span>
<span class="token punctuation">}</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>条件<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_3-4-常用对象" tabindex="-1"><a class="header-anchor" href="#_3-4-常用对象" aria-hidden="true">#</a> 3.4 常用对象</h4><ul><li><p>字符串</p><ul><li>长度使用 length 属性</li><li>== 和 === 的区别（前端面试题）</li></ul></li><li><p>数组</p><ul><li>添加新元素使用 push() 方法</li><li>删除元素：pop() 方法</li></ul></li><li><p>对象</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span><span class="token literal-property property">key1</span><span class="token operator">:</span> value<span class="token punctuation">;</span> key2<span class="token operator">:</span> value2<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h4 id="_3-5-html-dom" tabindex="-1"><a class="header-anchor" href="#_3-5-html-dom" aria-hidden="true">#</a> 3.5 HTML DOM</h4><ul><li><p>文档对象模型：<strong>HTML DOM 是关于如何获取、更改、添加或删除 HTML 元素的标准</strong>。</p></li><li><p>DOM 规范</p><ul><li>Document 文本对象</li><li>Element 元素对象</li><li>Text 文本对象</li></ul></li><li><p>DOM 方法</p><ul><li><p>getElementById() 方法</p></li><li><p>innerHTML 属性</p><figure><img src="`+u+`" alt="DOM查找元素" tabindex="0" loading="lazy"><figcaption>DOM查找元素</figcaption></figure></li></ul></li></ul><h4 id="_3-6-bom" tabindex="-1"><a class="header-anchor" href="#_3-6-bom" aria-hidden="true">#</a> 3.6 BOM</h4><ul><li><p>浏览器对象模型（Browser Object Model (BOM)）允许 JavaScript 与浏览器对话</p></li><li><p>弹框方法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 警告框</span>
window<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;sometext&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 确认框</span>
window<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&quot;sometext&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 提示框</span>
window<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">&quot;sometext&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;defaultText&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_3-7-事件" tabindex="-1"><a class="header-anchor" href="#_3-7-事件" aria-hidden="true">#</a> 3.7 事件</h4><ul><li>常用事件 <ul><li>onClick：点击</li><li>onchange：改变</li><li>onmouseover：鼠标覆盖</li><li>onmouseout：鼠标离开</li></ul></li></ul><h2 id="四、xml" tabindex="-1"><a class="header-anchor" href="#四、xml" aria-hidden="true">#</a> 四、XML</h2><h3 id="_1、概述-3" tabindex="-1"><a class="header-anchor" href="#_1、概述-3" aria-hidden="true">#</a> 1、概述</h3><ul><li>定义： <ul><li>可扩展标记语言（EXtensible Markup Language）；</li><li>XML 的设计宗旨是<em>传输数据</em>，而非显示数据；</li><li>XML 标签没有被预定义，需要自行定义标签；</li></ul></li><li>XML 和 HTML 的区别： <ul><li>XML：被设计为传输和存储数据，其焦点是数据的内容</li><li>HTML：被设计用来显示数据，其焦点是数据的外观</li></ul></li></ul><h3 id="_2、xml-语法" tabindex="-1"><a class="header-anchor" href="#_2、xml-语法" aria-hidden="true">#</a> 2、XML 语法</h3><ul><li>语法规则： <ul><li>第一行：XML 的声明，包括版本号，文档的字符编码</li><li>之后是自定义的 XML 标签</li></ul></li></ul><h3 id="_3、xml-组成" tabindex="-1"><a class="header-anchor" href="#_3、xml-组成" aria-hidden="true">#</a> 3、XML 组成</h3><ul><li>文档约束</li><li>标签</li><li>属性（官方建议：使用子标签代替）</li><li>文本</li></ul><h3 id="_4、xml-命名规则" tabindex="-1"><a class="header-anchor" href="#_4、xml-命名规则" aria-hidden="true">#</a> 4、XML 命名规则</h3><ul><li>命名规则 <ul><li>可以包含字母、数字、其他字符；</li><li>不能以数字或其他标点符号开头；</li><li>不能以 xml（ XML Xml） 开始；</li><li>不能包含空格；</li></ul></li><li>良好的命名： <ul><li>见名知意；</li><li>简短</li><li>避免使用 <code>- . :</code></li><li>尽量和数据库命名一致</li></ul></li><li>XML 标签对大小敏感</li><li>正确嵌套</li></ul><h3 id="_5、xml-引用" tabindex="-1"><a class="header-anchor" href="#_5、xml-引用" aria-hidden="true">#</a> 5、XML 引用</h3><ul><li><p>XML 中，5 个预定义的实体引用</p><figure><img src="`+r+`" alt="XML实体引用" tabindex="0" loading="lazy"><figcaption>XML实体引用</figcaption></figure></li></ul><h3 id="_6、xml-约束" tabindex="-1"><a class="header-anchor" href="#_6、xml-约束" aria-hidden="true">#</a> 6、XML 约束</h3><h4 id="_6-1-dtd-约束" tabindex="-1"><a class="header-anchor" href="#_6-1-dtd-约束" aria-hidden="true">#</a> 6.1 DTD 约束</h4><ul><li><p>编写 DTD 约束文件，后缀以 .dtd 结尾</p><div class="language-dtd line-numbers-mode" data-ext="dtd"><pre class="language-dtd"><code>&lt;!ELEMENT note (to,from,heading,body)&gt;
&lt;!ELEMENT to (#PCDATA)&gt;
&lt;!ELEMENT from (#PCDATA)&gt;
&lt;!ELEMENT heading (#PCDATA)&gt;
&lt;!ELEMENT body (#PCDATA)&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; chatset=&quot;UTF_8&quot;?&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">note</span> <span class="token name">SYSTEM</span> <span class="token string">&quot;node.dtd&quot;</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 编写 xml --&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_6-2-schema-约束" tabindex="-1"><a class="header-anchor" href="#_6-2-schema-约束" aria-hidden="true">#</a> 6.2 Schema 约束</h4><ul><li><p>定义：XML Schema 的作用是定义 XML 文档的合法构建模块，类似 DTD</p></li><li><p>约束能力：</p><ul><li>定义可出现在文档中的元素</li><li>定义可出现在文档中的属性</li><li>定义哪个元素是子元素</li><li>定义子元素的次序</li><li>定义子元素的数目</li><li>定义元素是否为空，或者是否可包含文本</li><li>定义元素和属性的数据类型</li><li>定义元素和属性的默认值以及固定值</li></ul></li><li><p>note.xsd</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xs:</span>schema</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xs</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema<span class="token punctuation">&quot;</span></span>
<span class="token attr-name">targetNamespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3school.com.cn<span class="token punctuation">&quot;</span></span>
<span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3school.com.cn<span class="token punctuation">&quot;</span></span>
<span class="token attr-name">elementFormDefault</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>qualified<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xs:</span>element</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>note<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xs:</span>complexType</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xs:</span>sequence</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xs:</span>element</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>to<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xs:string<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xs:</span>element</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>from<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xs:string<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xs:</span>element</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>heading<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xs:string<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xs:</span>element</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>body<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xs:string<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">xs:</span>sequence</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">xs:</span>complexType</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">xs:</span>element</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">xs:</span>schema</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>note</span>
<span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3school.com.cn<span class="token punctuation">&quot;</span></span>
<span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
<span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>note.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>to</span><span class="token punctuation">&gt;</span></span>George<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>to</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>from</span><span class="token punctuation">&gt;</span></span>John<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>from</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>heading</span><span class="token punctuation">&gt;</span></span>Reminder<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>heading</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>Don&#39;t forget the meeting!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>note</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_3-7、xml-解析" tabindex="-1"><a class="header-anchor" href="#_3-7、xml-解析" aria-hidden="true">#</a> 3.7、XML 解析</h3><ul><li>方式 <ul><li>DOM <ul><li>将标记语言的文字一次性读进内存，在内存中形成一棵树</li><li>优点：操作方便，可以增删改</li><li>缺点：占内存</li></ul></li><li>SAX <ul><li>逐行读取，基于事件驱动</li><li>优点：不占内存</li><li>缺点：只读，不能增删改</li></ul></li></ul></li><li>常见解析器： <ul><li>JAXP：sun 公司提供；支持 DOM SAX</li><li><strong>DOM4J</strong>：比较优秀</li><li>jsoup：HTML 解析器</li></ul></li></ul><h3 id="_3-8、xml-检索" tabindex="-1"><a class="header-anchor" href="#_3-8、xml-检索" aria-hidden="true">#</a> 3.8、XML 检索</h3><ul><li>使用 XPath</li><li>Maven 导包 <code>jaxen</code></li><li>方便检索，便于查找</li></ul><h2 id="五、json" tabindex="-1"><a class="header-anchor" href="#五、json" aria-hidden="true">#</a> 五、JSON</h2><h3 id="_1、json-概述" tabindex="-1"><a class="header-anchor" href="#_1、json-概述" aria-hidden="true">#</a> 1、JSON 概述</h3><ul><li>JavaScript Object Notation（JavaScript 对象标记法）</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;Bill Gates&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">62</span><span class="token punctuation">,</span>
    <span class="token literal-property property">city</span><span class="token operator">:</span><span class="token string">&quot;Seattle&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>Java JSON 格式（key 有引号）</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;Bill Gates&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">62</span><span class="token punctuation">,</span>
    <span class="token property">&quot;city&quot;</span><span class="token operator">:</span><span class="token string">&quot;Seattle&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>应用场景：数据载体</p><ul><li>传参</li><li>接受参数</li></ul></li></ul><h3 id="_2、json-语法" tabindex="-1"><a class="header-anchor" href="#_2、json-语法" aria-hidden="true">#</a> 2、JSON 语法</h3><ul><li>语法规则： <ul><li>数据在名称/值对中</li><li>数据由逗号分隔</li><li>花括号容纳对象</li><li>方括号容纳数组</li></ul></li></ul><h3 id="_2、js-解析" tabindex="-1"><a class="header-anchor" href="#_2、js-解析" aria-hidden="true">#</a> 2、JS 解析</h3><ul><li><p>字符串 --&gt; JSON</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> json <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>JSON --&gt; 字符串</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="_3、json-和-java-对象像话转换" tabindex="-1"><a class="header-anchor" href="#_3、json-和-java-对象像话转换" aria-hidden="true">#</a> 3、JSON 和 Java 对象像话转换</h3><ul><li>通过 JSON 实现前后端交互：JSON 数据格式小，减少资源消耗；</li><li>后端： <ul><li>请求数据：json 字符串提交给后端处理</li><li>响应数据：Java 对象转换成 json 字符串</li></ul></li></ul><h3 id="_4、fastjson-的使用" tabindex="-1"><a class="header-anchor" href="#_4、fastjson-的使用" aria-hidden="true">#</a> 4、FastJson 的使用</h3><ul><li><p>Maven 导包</p></li><li><p>Java 对象转 json</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>json 转 Java 对象</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>jsonStr<span class="token punctuation">,</span> <span class="token class-name">T</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="六、web概述" tabindex="-1"><a class="header-anchor" href="#六、web概述" aria-hidden="true">#</a> 六、Web概述</h2><h3 id="_1、概述-4" tabindex="-1"><a class="header-anchor" href="#_1、概述-4" aria-hidden="true">#</a> 1、概述</h3><ul><li>Web 是全球广域网，也称万维网（www），能够通过浏览器访问的网站；</li></ul><h3 id="_2、java-web" tabindex="-1"><a class="header-anchor" href="#_2、java-web" aria-hidden="true">#</a> 2、Java Web</h3><ul><li>使用 Java 技术完成 web 网页技术栈；</li><li>Java Web 技术栈 <ul><li>静态资源（固定网页）</li><li>动态资源（Java 动态生成，JS 动态获取）</li><li>数据库（MySQL）</li><li>web 服务器（Tomcat）</li></ul></li></ul><h3 id="_3、b-s-架构" tabindex="-1"><a class="header-anchor" href="#_3、b-s-架构" aria-hidden="true">#</a> 3、B/S 架构</h3><ul><li>Browser（浏览器） Server（服务器）</li><li>静态资源： <ul><li>HTML、CSS、图片、视频、音频 ...</li></ul></li><li>动态资源： <ul><li>servlet、jsp，用来填充数据、处理逻辑</li><li>处理流程： <ol><li>查询数据库</li><li>根据业务逻辑处理数据</li><li>响应给静态资源，通过静态资源展示处理</li></ol></li></ul></li><li>数据库 <ul><li>MySQL</li></ul></li><li>HTTP 协议 <ul><li>TCP（常用）、UDP</li></ul></li><li>Web 服务器 <ul><li>用来解析 HTTP 协议，处理请求数据，响应结果数据</li><li>使用 Tomcat 服务器</li></ul></li></ul><h3 id="_4、http" tabindex="-1"><a class="header-anchor" href="#_4、http" aria-hidden="true">#</a> 4、HTTP</h3><ul><li>HTTP：超文本传输协议，规定了 B/S 之间的数据传输规则</li><li>数据传输：请求数据请求后端服务器，服务器按照指定格式返回给浏览器</li></ul><h4 id="_4-1-http-特点" tabindex="-1"><a class="header-anchor" href="#_4-1-http-特点" aria-hidden="true">#</a> 4.1 HTTP 特点</h4><ul><li>基于 TCP （面向连接，三次握手）</li><li>基于请求、响应模型的（一次请求对应一次响应，一一对应的关系）</li><li>HTTP 是无状态的，没有去存储响应数据，响应的数据是独立的 <ul><li>优点：速度快</li><li>缺点：上一次请求和下一次请求的数据不能共享</li></ul></li></ul><h4 id="_4-2、请求数据格式" tabindex="-1"><a class="header-anchor" href="#_4-2、请求数据格式" aria-hidden="true">#</a> 4.2、请求数据格式</h4><ul><li>请求行 <ul><li>请求方式有7种最常用：get post delete put</li></ul></li><li>请求头 <ul><li>host: 表示请求的服务器地址</li><li>accept:表示浏览器能接受的资源类型 application/json,text/plain</li><li>token：自定义的token</li><li>User-agent: 浏览器的版本信息</li></ul></li><li>请求体 <ul><li>如果是 GET请求或者 DELETE 请求，请求体放置到请求行位置</li><li>POST 放置到请求体中</li><li>GET请求参数大小是有限制的，POST 没有大小限制</li></ul></li></ul><h4 id="_4-3、响应数据格式" tabindex="-1"><a class="header-anchor" href="#_4-3、响应数据格式" aria-hidden="true">#</a> 4.3、响应数据格式</h4><ul><li><p>响应行</p><ul><li>状态码：200、404、5xx</li><li>版本：HTTP/1.1</li></ul></li><li><p>响应头</p><figure><img src="`+d+`" alt="响应头" tabindex="0" loading="lazy"><figcaption>响应头</figcaption></figure></li><li><p>响应体</p><ul><li>提供数据给前端进行数据展示</li></ul></li></ul><h4 id="_4-4、状态码" tabindex="-1"><a class="header-anchor" href="#_4-4、状态码" aria-hidden="true">#</a> 4.4、状态码</h4><table><thead><tr><th>状态码分类</th><th>说明</th></tr></thead><tbody><tr><td>1xx</td><td><strong>响应中</strong>——临时状态码，表示请求已经接受，告诉客户端应该继续请求或者如果它已经完成则忽略它</td></tr><tr><td>2xx</td><td><strong>成功</strong>——表示请求已经被成功接收，处理已完成</td></tr><tr><td>3xx</td><td><strong>重定向</strong>——重定向到其它地方：它让客户端再发起一个请求以完成整个处理。</td></tr><tr><td>4xx</td><td><strong>客户端错误</strong>——处理发生错误，责任在客户端，如：客户端的请求一个不存在的资源，客户端未被授权，禁止访问等</td></tr><tr><td>5xx</td><td><strong>服务器端错误</strong>——处理发生错误，责任在服务端，如：服务端抛出异常，路由出错，HTTP版本不支持等</td></tr></tbody></table><table><thead><tr><th>状态码</th><th>英文描述</th><th>解释</th></tr></thead><tbody><tr><td>200</td><td><strong><code>OK</code></strong></td><td>客户端请求成功，即<strong>处理成功</strong>，这是我们最想看到的状态码</td></tr><tr><td>302</td><td><strong><code>Found</code></strong></td><td>指示所请求的资源已移动到由<code>Location</code>响应头给定的 URL，浏览器会自动重新访问到这个页面</td></tr><tr><td>304</td><td><strong><code>Not Modified</code></strong></td><td>告诉客户端，你请求的资源至上次取得后，服务端并未更改，你直接用你本地缓存吧。隐式重定向</td></tr><tr><td>400</td><td><strong><code>Bad Request</code></strong></td><td>客户端请求有<strong>语法错误</strong>，不能被服务器所理解</td></tr><tr><td>403</td><td><strong><code>Forbidden</code></strong></td><td>服务器收到请求，但是<strong>拒绝提供服务</strong>，比如：没有权限访问相关资源</td></tr><tr><td>404</td><td><strong><code>Not Found</code></strong></td><td><strong>请求资源不存在</strong>，一般是URL输入有误，或者网站资源被删除了</td></tr><tr><td>428</td><td><strong><code>Precondition Required</code></strong></td><td><strong>服务器要求有条件的请求</strong>，告诉客户端要想访问该资源，必须携带特定的请求头</td></tr><tr><td>429</td><td><strong><code>Too Many Requests</code></strong></td><td><strong>太多请求</strong>，可以限制客户端请求某个资源的数量，配合 Retry-After(多长时间后可以请求)响应头一起使用</td></tr><tr><td>431</td><td><strong><code> Request Header Fields Too Large</code></strong></td><td><strong>请求头太大</strong>，服务器不愿意处理请求，因为它的头部字段太大。请求可以在减少请求头域的大小后重新提交。</td></tr><tr><td>405</td><td><strong><code>Method Not Allowed</code></strong></td><td>请求方式有误，比如应该用GET请求方式的资源，用了POST</td></tr><tr><td>500</td><td><strong><code>Internal Server Error</code></strong></td><td><strong>服务器发生不可预期的错误</strong>。服务器出异常了，赶紧看日志去吧</td></tr><tr><td>503</td><td><strong><code>Service Unavailable</code></strong></td><td><strong>服务器尚未准备好处理请求</strong>，服务器刚刚启动，还未初始化好</td></tr><tr><td>511</td><td><strong><code>Network Authentication Required</code></strong></td><td><strong>客户端需要进行身份验证才能获得网络访问权限</strong></td></tr></tbody></table><h3 id="_5、tomcat" tabindex="-1"><a class="header-anchor" href="#_5、tomcat" aria-hidden="true">#</a> 5、Tomcat</h3><ul><li><p>web 服务器：是一个应用程序（<strong>tomcat</strong>）,是对 http 进行封装，能够简化程序员的开发，能够提供网上信息的交互和浏览。</p></li><li><p>访问项目服务器的流程</p><ul><li>编写前端静态页面，以及后端服务代码</li><li>部署 web 服务器（tomcat）</li><li>将编写好的静态页面部署到 web 服务器上</li></ul></li><li><p>tomcat 是免费的，是 apache 基金会下的</p></li><li><p>JavaEE：Java 企业版</p></li><li><p>常见问题 —— 乱码问题：</p><p>conf 目录下的 logging.properties</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">java.util.logging.ConsoleHandler.encoding</span> <span class="token punctuation">=</span> <span class="token value attr-value">UTF-8</span>

<span class="token comment"># 修改为</span>
<span class="token key attr-name">java.util.logging.ConsoleHandler.encoding</span> <span class="token punctuation">=</span> <span class="token value attr-value">GBK</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>常见问题 —— 修改端口</p><p>conf server.xml</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Connector</span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>8080<span class="token punctuation">&quot;</span></span> <span class="token attr-name">protocol</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>HTTP/1.1<span class="token punctuation">&quot;</span></span>
               <span class="token attr-name">connectionTimeout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20000<span class="token punctuation">&quot;</span></span>
               <span class="token attr-name">redirectPort</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>8443<span class="token punctuation">&quot;</span></span>
               <span class="token attr-name">maxParameterCount</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1000<span class="token punctuation">&quot;</span></span>
               <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="七、servlet" tabindex="-1"><a class="header-anchor" href="#七、servlet" aria-hidden="true">#</a> 七、Servlet</h2><h3 id="_1、概述-5" tabindex="-1"><a class="header-anchor" href="#_1、概述-5" aria-hidden="true">#</a> 1、概述</h3><ul><li><p>Java Servlet 是运行在 Web 服务器或应用服务器上的程序，它是作为来自 Web 浏览器或其他 HTTP 客户端的请求和 HTTP 服务器上的数据库或应用程序之间的中间层。</p></li><li><p>Servlet 架构</p><figure><img src="`+k+`" alt="Servlet架构" tabindex="0" loading="lazy"><figcaption>Servlet架构</figcaption></figure></li><li><p>Servlet :是 JavaEE 的规范（接口）；</p></li></ul><h3 id="_2、快速入门" tabindex="-1"><a class="header-anchor" href="#_2、快速入门" aria-hidden="true">#</a> 2、快速入门</h3><ol><li><p>导包</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javax.servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 编译和测试有效，避免运行，和 Tomcat 自己的 Servlet 冲突--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>实现 Servlet 接口，使用注解配置 Servlet（还可以使用 web.xml 手动配置）</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">&quot;/myServlet&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyServlet</span> <span class="token keyword">implements</span> <span class="token class-name">Servlet</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">ServletConfig</span> servletConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">ServletConfig</span> <span class="token function">getServletConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 重写该方法
     *
     * <span class="token keyword">@param</span> <span class="token parameter">servletRequest</span>
     * <span class="token keyword">@param</span> <span class="token parameter">servletResponse</span>
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">ServletException</span></span>
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> servletRequest<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> servletResponse<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;测试 MyServlet&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getServletInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>访问 servlet</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>http://localhost:8080/myServlet
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="_3、执行流程" tabindex="-1"><a class="header-anchor" href="#_3、执行流程" aria-hidden="true">#</a> 3、执行流程</h3><figure><img src="`+v+`" alt="Servlet执行流程" tabindex="0" loading="lazy"><figcaption>Servlet执行流程</figcaption></figure><ul><li>浏览器发起 <code>http://localhost:8080/myServlet</code> 请求 <ul><li><code>http://localhost:8080</code>：需要访问的服务器（Tomcat）</li><li><code>myServlet</code>：使用 WebServlet 注解命名的类</li></ul></li><li>找到 servlet 之后： <ul><li>Tomcat 会为 MyServlet 创建一个对象，调用 service 方法，即子类实现的 service 方法</li><li>service 方法的两个参数 <ul><li>ServletRequest：封装了请求数据</li><li>ServletResponse：封装了响应数据</li></ul></li></ul></li><li>面试拓展： <ul><li>Servlet 是谁创建的？Tomcat 服务器</li><li>为什么一定能调用 service 方法？继承 servlet 接口，必须实现 service 方法，通过多态调用子类实现的 service 方法</li></ul></li></ul><h3 id="_4、servlet-生命周期-面试可能会问" tabindex="-1"><a class="header-anchor" href="#_4、servlet-生命周期-面试可能会问" aria-hidden="true">#</a> 4、Servlet 生命周期（面试可能会问）</h3><ul><li><p>创建</p><ul><li><p>第一次访问 Servlet 时，服务器调用 init 创建 Servlet，只创建一次（使用懒加载机制）</p><ul><li><p>优点：节约内存</p></li><li><p>缺点：用户体验不好</p></li><li><p>loadOnStartup 非负时，容器启动时加载</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>urlPatterns <span class="token operator">=</span> <span class="token string">&quot;/myServlet&quot;</span><span class="token punctuation">,</span> loadOnStartup <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li></ul></li><li><p>业务逻辑</p><ul><li>service 方法处理业务逻辑；</li></ul></li><li><p>销毁</p><ul><li>关闭服务或者手动调用 destroy 方法时，垃圾回收期会不定时回收 Servlet 对象；</li></ul></li></ul><h3 id="_5、servlet-体系结构" tabindex="-1"><a class="header-anchor" href="#_5、servlet-体系结构" aria-hidden="true">#</a> 5、Servlet 体系结构</h3><figure><img src="`+m+`" alt="Servlet体系结构" tabindex="0" loading="lazy"><figcaption>Servlet体系结构</figcaption></figure><ul><li><p>继承 HttpServlet</p><ul><li><p>单独重写想要实现的方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>urlPatterns <span class="token operator">=</span> <span class="token string">&quot;/myServletExtends&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyServletExtends</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----------------访问 GET 请求------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>HttpServlet 中的 service 方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> method <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> lastModified<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            lastModified <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getLastModified</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>lastModified <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1L</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doGet</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">long</span> ifModifiedSince <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getDateHeader</span><span class="token punctuation">(</span><span class="token string">&quot;If-Modified-Since&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ifModifiedSince <span class="token operator">&lt;</span> lastModified<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">maybeSetLastModified</span><span class="token punctuation">(</span>resp<span class="token punctuation">,</span> lastModified<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doGet</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    resp<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">304</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;HEAD&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            lastModified <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getLastModified</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">maybeSetLastModified</span><span class="token punctuation">(</span>resp<span class="token punctuation">,</span> lastModified<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doHead</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doPost</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;PUT&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doPut</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;DELETE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doDelete</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;OPTIONS&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doOptions</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;TRACE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doTrace</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> errMsg <span class="token operator">=</span> lStrings<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;http.method_not_implemented&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> errArgs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>method<span class="token punctuation">}</span><span class="token punctuation">;</span>
            errMsg <span class="token operator">=</span> <span class="token class-name">MessageFormat</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>errMsg<span class="token punctuation">,</span> errArgs<span class="token punctuation">)</span><span class="token punctuation">;</span>
            resp<span class="token punctuation">.</span><span class="token function">sendError</span><span class="token punctuation">(</span><span class="token number">501</span><span class="token punctuation">,</span> errMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h3 id="_6、urlpattern-配置" tabindex="-1"><a class="header-anchor" href="#_6、urlpattern-配置" aria-hidden="true">#</a> 6、urlPattern 配置</h3><ul><li>想要访问 Servlet ，就需要配置访问路径，使用 <code>/</code> 开头</li><li>配置规则 <ul><li>精确配置：/myServlet</li><li>模糊配置：/*</li><li>扩展名配置：/my.do</li></ul></li><li>建议使用精确配置；优先级：精确配置 &gt; 扩展名配置 &gt; 模糊配置</li></ul><h3 id="_7、xml-配置" tabindex="-1"><a class="header-anchor" href="#_7、xml-配置" aria-hidden="true">#</a> 7、XML 配置</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>xmlServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">&gt;</span></span>org.taiyi.servlet.XmlServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>xmlServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>/xmlServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="八、request-和-response" tabindex="-1"><a class="header-anchor" href="#八、request-和-response" aria-hidden="true">#</a> 八、Request 和 Response</h2><h3 id="_1、概述-6" tabindex="-1"><a class="header-anchor" href="#_1、概述-6" aria-hidden="true">#</a> 1、概述</h3><ul><li>Request：获取请求数据 <ul><li>请求行、请求头、请求体</li><li>Tomcat 会把请求数据解析，存储到 Request 对象中，直接从 Servlet 对象中取</li></ul></li><li>Response：响应数据 <ul><li>响应行、响应头、响应体</li><li>业务的封装数据设置到响应数据包中</li><li>封装数据进 Response 中，Tomcat 会把封装数据解析成特定格式返回给浏览器</li></ul></li></ul><h3 id="_2、登录案例" tabindex="-1"><a class="header-anchor" href="#_2、登录案例" aria-hidden="true">#</a> 2、登录案例</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;login&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> res <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> username <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> password <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;taiyi&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res <span class="token operator">=</span> <span class="token string">&quot;&lt;h1&gt;登录成功&lt;/h1&gt;&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            res <span class="token operator">=</span> <span class="token string">&quot;&lt;h1&gt;账号或密码不正确，请重新登陆！&lt;/h1&gt;&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 响应回前端</span>
        resp<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;text/html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resp<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、request" tabindex="-1"><a class="header-anchor" href="#_3、request" aria-hidden="true">#</a> 3、Request</h3><h4 id="_3-1-request-继承体系" tabindex="-1"><a class="header-anchor" href="#_3-1-request-继承体系" aria-hidden="true">#</a> 3.1 Request 继承体系</h4><figure><img src="`+g+`" alt="Request继承结构" tabindex="0" loading="lazy"><figcaption>Request继承结构</figcaption></figure><ul><li>ServletRequest 接口规范</li><li>HttpServletRequest 封装 http 协议</li><li>HttpServletRequestWrapper：提供具体的实现</li></ul><h4 id="_3-2-request-获取请求数据" tabindex="-1"><a class="header-anchor" href="#_3-2-request-获取请求数据" aria-hidden="true">#</a> 3.2 Request 获取请求数据</h4><ul><li><p>获取请求头</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> accept <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Accept&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>accept<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>获取请求行</p><ul><li><p>获取请求方法</p></li><li><p>获取请求路径（项目访问路径）</p></li><li><p>获取 URL （统一资源定位符）</p></li><li><p>获取 URI （统一资源标识符）</p></li><li><p>获取 GET 的请求参数</p></li><li><p>代码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> method <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// GET</span>

<span class="token class-name">String</span> contextPath <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getContextPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">StringBuffer</span> requestURL <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getRequestURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>requestURL<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// http://localhost:8080/request</span>

<span class="token class-name">String</span> requestURI <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>requestURI<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// /request</span>

<span class="token class-name">String</span> queryString <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getQueryString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>queryString<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// username=sy</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>获取请求体</p><ul><li><p>注意：GET 方法没有请求体，POST 、PUT等方法有</p></li><li><p>代码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token comment">/*
	获取请求体
	*/</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;=========================================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">BufferedReader</span> reader <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> s <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token comment">/*
	获取请求体
	*/</span>
    <span class="token class-name">ServletInputStream</span> inputStream <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    inputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>获取请求参数</p><ul><li><p>GET 请求，请求参数在 <strong>请求行</strong> 中；POST 请求，请求参数在 <strong>请求体</strong> 中；</p></li><li><p>GET：<code>req.getQueryString()</code></p></li><li><p>POST：<code>req.getInputStream()</code> <code>req.getReader()</code></p></li><li><p>获取所有参数的 Map 集合</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Map</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token function">getParameterMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>获取单个参数</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> <span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>请求参数乱码问题（Tomcat7）</p><ul><li>获取参数之前设置编码格式：<code>req.setCharacterEncoding(&quot;UFT-8&quot;);</code></li></ul></li></ul></li></ul><h4 id="_3-3-请求转发" tabindex="-1"><a class="header-anchor" href="#_3-3-请求转发" aria-hidden="true">#</a> 3.3 请求转发</h4><ul><li><p>请求转发（forward）：在服务器内部做资源跳转；</p></li><li><p>实现方式</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// class: ServletRequest</span>
<span class="token class-name">RequestDispatcher</span> <span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// class: RequestDispatcher</span>
<span class="token keyword">void</span> <span class="token function">forward</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> var1<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> var2<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>案例</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RequestHello</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hello begin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        req<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">&quot;/word&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hello end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">&quot;/word&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RequestWord</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;word print&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>数据共享问题</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// class: ServletRequest</span>
<span class="token class-name">Object</span> <span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token class-name">Object</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>特点（面试可能会问）</p><ul><li>浏览器地址不变</li><li>只能内部服务器之间转发</li><li>只发起一次请求</li></ul></li></ul><h3 id="_4、response" tabindex="-1"><a class="header-anchor" href="#_4、response" aria-hidden="true">#</a> 4、Response</h3><h4 id="_4-1-response-集成结构" tabindex="-1"><a class="header-anchor" href="#_4-1-response-集成结构" aria-hidden="true">#</a> 4.1 Response 集成结构</h4><figure><img src="`+h+`" alt="Response继承结构" tabindex="0" loading="lazy"><figcaption>Response继承结构</figcaption></figure><ul><li>ServletResponse 接口规范</li><li>HttpServletResponse 封装 http 协议</li><li>HttpServletResponseWrapper：提供具体的实现</li></ul><h4 id="_4-2-response-响应数据" tabindex="-1"><a class="header-anchor" href="#_4-2-response-响应数据" aria-hidden="true">#</a> 4.2 Response 响应数据</h4><ul><li><p>设置响应头</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">&quot;/response&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ResponseServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        resp<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;taiyi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>设置响应行</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">&quot;/response&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ResponseServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        resp<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>设置响应体</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// class: ServletResponse</span>
<span class="token class-name">ServletOutputStream</span> <span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span>
<span class="token class-name">PrintWriter</span> <span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_4-3-重定向" tabindex="-1"><a class="header-anchor" href="#_4-3-重定向" aria-hidden="true">#</a> 4.3 重定向</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// class: HttpServletResponse</span>
<span class="token keyword">void</span> <span class="token function">sendRedirect</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>跨域访问与不跨域访问</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">&quot;/redirect&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedirectServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;公司内部处理不了，需要重定向&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 重定向</span>
        <span class="token comment">//resp.sendRedirect(&quot;https://www.baidu.com&quot;);   // 跨域</span>
        resp<span class="token punctuation">.</span><span class="token function">sendRedirect</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//  不跨域</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重定向的特点</p><ul><li>浏览器地址栏变化</li><li>可以重定向任何位置</li><li>两次请求</li></ul></li></ul><h3 id="_5、重定向和请求转发的区别-面试" tabindex="-1"><a class="header-anchor" href="#_5、重定向和请求转发的区别-面试" aria-hidden="true">#</a> 5、重定向和请求转发的区别（面试）</h3><table><thead><tr><th>重定向</th><th>请求转发</th></tr></thead><tbody><tr><td>浏览器地址变化</td><td>不变</td></tr><tr><td>可以重定向任何位置</td><td>只能在当前服务器内部</td></tr><tr><td>两次请求</td><td>一次请求</td></tr><tr><td>资源不共享</td><td>资源共享</td></tr></tbody></table><h3 id="_6、模拟实战-登录和注册" tabindex="-1"><a class="header-anchor" href="#_6、模拟实战-登录和注册" aria-hidden="true">#</a> 6、模拟实战：登录和注册</h3><figure><img src="`+b+`" alt="登录和注册" tabindex="0" loading="lazy"><figcaption>登录和注册</figcaption></figure><h2 id="九、jsp" tabindex="-1"><a class="header-anchor" href="#九、jsp" aria-hidden="true">#</a> 九、JSP</h2><h3 id="_1、概述-7" tabindex="-1"><a class="header-anchor" href="#_1、概述-7" aria-hidden="true">#</a> 1、概述</h3><ul><li>Java Server Pages：是一种动态网页开发技术；</li><li>JSP = 静态网页 + Java 动态展示；</li><li>思考？ <ul><li>与纯 Servlet 相比：JSP可以很方便的编写或者修改HTML网页而不用去面对大量的println语句。</li><li>与JavaScript相比：虽然JavaScript可以在客户端动态生成HTML，但是很难与服务器交互，因此不能提供复杂的服务，比如访问数据库和图像处理等等。</li><li>与静态HTML相比：静态HTML不包含动态信息。</li></ul></li></ul><h3 id="_2、简单使用" tabindex="-1"><a class="header-anchor" href="#_2、简单使用" aria-hidden="true">#</a> 2、简单使用</h3><div class="language-jsp line-numbers-mode" data-ext="jsp"><pre class="language-jsp"><code>&lt;%--解决乱码问题--%&gt;
&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Java Web&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;h1&gt;欢迎学习 JavaWeb&lt;/h1&gt;
&lt;%
    System.out.println(&quot;==================&quot;);
%&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、jsp-原理" tabindex="-1"><a class="header-anchor" href="#_3、jsp-原理" aria-hidden="true">#</a> 3、JSP 原理</h3><ul><li>JSP是一种 <strong>Java servlet</strong> ，主要用于实现 Java Web 应用程序的用户界面部分。网页开发者们通过结合HTML代码、XHTML代码、XML元素以及嵌入JSP操作和命令来编写JSP</li><li>HttpJspBase 继承自 HttpServlet</li><li>Tomcat 将 jsp 编译成 servlet</li></ul><h3 id="_4、jsp-语法" tabindex="-1"><a class="header-anchor" href="#_4、jsp-语法" aria-hidden="true">#</a> 4、JSP 语法</h3><h4 id="_4-1-脚本程序" tabindex="-1"><a class="header-anchor" href="#_4-1-脚本程序" aria-hidden="true">#</a> 4.1 脚本程序</h4><ul><li><p>脚本内容直接放到 _jspService</p><div class="language-jsp line-numbers-mode" data-ext="jsp"><pre class="language-jsp"><code>&lt;% 代码片段 %&gt;

&lt;jsp:scriptlet&gt;
   代码片段
&lt;/jsp:scriptlet&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>脚本内容直接放到 servlet 类里面</p><div class="language-jsp line-numbers-mode" data-ext="jsp"><pre class="language-jsp"><code>&lt;%! declaration; [ declaration; ]+ ... %&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>内容放在打印中去</p><div class="language-jsp line-numbers-mode" data-ext="jsp"><pre class="language-jsp"><code>&lt;%= 表达式 %&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h4 id="_4-2-jsp-注释" tabindex="-1"><a class="header-anchor" href="#_4-2-jsp-注释" aria-hidden="true">#</a> 4.2 JSP 注释</h4><figure><img src="`+q+'" alt="JSP注释" tabindex="0" loading="lazy"><figcaption>JSP注释</figcaption></figure><h4 id="_4-3-jsp-指令" tabindex="-1"><a class="header-anchor" href="#_4-3-jsp-指令" aria-hidden="true">#</a> 4.3 JSP 指令</h4><figure><img src="'+f+'" alt="JSP指令" tabindex="0" loading="lazy"><figcaption>JSP指令</figcaption></figure><h4 id="_4-4-jsp-隐含对象" tabindex="-1"><a class="header-anchor" href="#_4-4-jsp-隐含对象" aria-hidden="true">#</a> 4.4 JSP 隐含对象</h4><figure><img src="'+x+'" alt="JSP隐含对象" tabindex="0" loading="lazy"><figcaption>JSP隐含对象</figcaption></figure><h4 id="_4-5-jsp-问题" tabindex="-1"><a class="header-anchor" href="#_4-5-jsp-问题" aria-hidden="true">#</a> 4.5 JSP 问题</h4><ul><li>编写、阅读不方便</li><li>调试不方便</li></ul><h3 id="_5、el-表达式" tabindex="-1"><a class="header-anchor" href="#_5、el-表达式" aria-hidden="true">#</a> 5、EL 表达式</h3><ul><li><p>概述：Expression Language，用户简化 JSP 页面内的 Java 代码；</p></li><li><p>EL 表达式是用来获取数据的；</p></li><li><p>语法：</p><div class="language-jsp line-numbers-mode" data-ext="jsp"><pre class="language-jsp"><code>${表达式}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>默认 el 表达式已经被禁用了，需要使用需要手动开启</p></li><li><p>域对象</p><ul><li><p>page:页面实例的引用,当前页面</p></li><li><p>request对象:代表这个请求，表示请求</p></li><li><p>session对象：跟踪在各个客户端请求间的会话，表示会话</p></li><li><p>application对象：当前的程序中</p><figure><img src="'+y+'" alt="域对象" tabindex="0" loading="lazy"><figcaption>域对象</figcaption></figure></li></ul></li></ul><h3 id="_6、jstl-标签" tabindex="-1"><a class="header-anchor" href="#_6、jstl-标签" aria-hidden="true">#</a> 6、JSTL 标签</h3><ul><li>JSP标准标签库（JSTL）是一个JSP标签集合，它封装了JSP应用的通用核心功能</li></ul><h2 id="十、mvc-模式" tabindex="-1"><a class="header-anchor" href="#十、mvc-模式" aria-hidden="true">#</a> 十、MVC 模式</h2><ul><li><p>MVC 是一种分层开发的思想</p><ul><li>M：Model 数据模型</li><li>V：View,视图页面</li><li>C：Ctroller,控制器，处理器</li></ul></li><li><p>意义：职责单一，低耦合，方便后期迭代升级</p><figure><img src="'+S+'" alt="MVC" tabindex="0" loading="lazy"><figcaption>MVC</figcaption></figure></li></ul><h2 id="十一、三层架构" tabindex="-1"><a class="header-anchor" href="#十一、三层架构" aria-hidden="true">#</a> 十一、三层架构</h2><ul><li><p>三层架构是将我们的项目分成了三个层面，分别是 表现层 、 业务逻辑层 、 数据访问层</p><figure><img src="'+_+`" alt="三层架构" tabindex="0" loading="lazy"><figcaption>三层架构</figcaption></figure><ul><li><strong>db</strong>:存储数据的</li><li><strong>dao</strong>:操作数据库的</li><li><strong>service</strong>:处理逻辑业务的</li><li><strong>controller</strong>:处理请求，响应数据</li></ul></li><li><p>意义：职责单一，方便迭代升级，方便后期开发维护</p></li></ul><h2 id="十二、会话" tabindex="-1"><a class="header-anchor" href="#十二、会话" aria-hidden="true">#</a> 十二、会话</h2><h3 id="_1、概述-8" tabindex="-1"><a class="header-anchor" href="#_1、概述-8" aria-hidden="true">#</a> 1、概述</h3><ul><li><p>会话：访问浏览器，访问 Web 服务器的资源，建立会话，直到有一方断开连接，会话结束。</p></li><li><p>注意：</p><ul><li>在同一会话中，可以包含多次请求；</li><li>同一窗口发起多次请求，产生多次响应是同一会话；</li><li>不同浏览器之间是不同会话；</li></ul></li></ul><h3 id="_2、会话跟踪" tabindex="-1"><a class="header-anchor" href="#_2、会话跟踪" aria-hidden="true">#</a> 2、会话跟踪</h3><ul><li><p>会话跟踪：为了共享数据，保证用户访问的时候不会出现紊乱</p></li><li><p>实际应用：</p><ul><li>获取用户登录信息；</li><li>用户在做操作的时候，可以去填写操作人信息；</li><li>记住当前密码信息，下次进入网站不需要再去输入账号密码；</li></ul></li><li><p>会话跟踪技术的实现方式：</p><ul><li>客户端技术：Cookie</li><li>服务端技术：Session</li></ul></li></ul><h2 id="十三、cookie" tabindex="-1"><a class="header-anchor" href="#十三、cookie" aria-hidden="true">#</a> 十三、Cookie</h2><h3 id="_1、概述-9" tabindex="-1"><a class="header-anchor" href="#_1、概述-9" aria-hidden="true">#</a> 1、概述</h3><ul><li>Cookie:是客户端技术，可以将数据存储到客户端，然后每次请求访问的时候，都会携带 Cookie 数据访问</li></ul><h3 id="_2、基本使用" tabindex="-1"><a class="header-anchor" href="#_2、基本使用" aria-hidden="true">#</a> 2、基本使用</h3><ul><li><p>创建 Cookie 对象</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Cookie</span> cookie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>响应 Cookie 给客户端</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// class: HttpServletResponse</span>
<span class="token keyword">void</span> <span class="token function">addCookie</span><span class="token punctuation">(</span><span class="token class-name">Cookie</span> cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>获取 Cookie</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// class: 获取 Cookie</span>
<span class="token class-name">Cookie</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Cookie 常用方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_3、cookie-原理" tabindex="-1"><a class="header-anchor" href="#_3、cookie-原理" aria-hidden="true">#</a> 3、Cookie 原理</h3><figure><img src="`+w+`" alt="Cookie原理分析图" tabindex="0" loading="lazy"><figcaption>Cookie原理分析图</figcaption></figure><ul><li>请求 RespServlet，添加了 Cookie 响应数据（username：sy），响应给浏览器；</li><li>Tomcat 设置响应头：Set-Cookie：(username=taiyi)；</li><li>得到 Cookie 值之后，浏览器会将数据存储到 Cookie 中；</li><li>第二次发起请求的时候，从缓存文件中获取到 Cookie 值，在请求头中设置 Cookie 值：Cookie: (username=taiyi)；</li><li>Server 可以通过 getCookies 方法获取所有的 Cookie 值</li></ul><h3 id="_4、cookie-使用" tabindex="-1"><a class="header-anchor" href="#_4、cookie-使用" aria-hidden="true">#</a> 4、Cookie 使用</h3><h4 id="_4-1-cookie-有效期设置" tabindex="-1"><a class="header-anchor" href="#_4-1-cookie-有效期设置" aria-hidden="true">#</a> 4.1 Cookie 有效期设置</h4><ul><li><p>新打开的浏览器窗口不能使用之前存储的 Cookie；</p></li><li><p>记住密码的功能有时间限制，如何设置 Cookie 的存活时间？</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// class: Cookie</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMaxAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> expiry<span class="token punctuation">)</span><span class="token punctuation">;</span>		<span class="token comment">// 设置0：删除 Cookie，负数：关闭浏览器就没，正数：过期时间，到期就没</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_4-2-cookie-存储中文乱码问题" tabindex="-1"><a class="header-anchor" href="#_4-2-cookie-存储中文乱码问题" aria-hidden="true">#</a> 4.2 Cookie 存储中文乱码问题</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">URLEncoder</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">&quot;UFT-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">URLDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="十四、session" tabindex="-1"><a class="header-anchor" href="#十四、session" aria-hidden="true">#</a> 十四、Session</h2><h3 id="_1、概述-10" tabindex="-1"><a class="header-anchor" href="#_1、概述-10" aria-hidden="true">#</a> 1、概述</h3><ul><li>Session：服务端会话跟踪技术，将数据保存到服务端；</li><li>Session 和 Cookie 的区别： <ul><li>Cookie 保存到 Client，容易被钓鱼网站拿过去用，有安全隐患；</li><li>Session 保存到 Server，相对安全；</li></ul></li><li>可以实现数据共享（存储会话请求的 Session，每一次请求都可以调用（没有过期））；</li></ul><h3 id="_2、基本使用-1" tabindex="-1"><a class="header-anchor" href="#_2、基本使用-1" aria-hidden="true">#</a> 2、基本使用</h3><ul><li><p>获取 Session 对象（如果第一次请求没有，就创建一个）</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// class: HttpServletRequest</span>
<span class="token class-name">HttpSession</span> <span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>共享数据</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// class: HttpSession</span>
<span class="token keyword">void</span> <span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token class-name">Object</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Object</span> <span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_3、session-原理" tabindex="-1"><a class="header-anchor" href="#_3、session-原理" aria-hidden="true">#</a> 3、Session 原理</h3><ul><li>Session 是基于 Cookie 实现的；</li></ul><figure><img src="`+j+`" alt="Session原理" tabindex="0" loading="lazy"><figcaption>Session原理</figcaption></figure><ol><li>请求 ReqServlet ，会得到一个 Cookie （JSEEIONID=1）；</li><li>生成一次会话 Session 存储到服务端；</li><li>再次请求 RespServlet 的时候，会携带上 JSSIONID=1 找到 Session 对象；</li></ol><ul><li>问题：如何通过 JSESSIONID 找到 Session 对象？ <ul><li>第一次请求，浏览器获得 JSESSIONID 存储到 Cookie 中；</li><li>第二次请求时就会携带 Cookie，其中存储着 JSESSIONID；</li><li>如果这个时候手动修改浏览器存储在 Cookie 中的 JSESSIONID 的值，服务端就拿不到 Session 对象；</li></ul></li></ul><h3 id="_4、session-使用" tabindex="-1"><a class="header-anchor" href="#_4、session-使用" aria-hidden="true">#</a> 4、Session 使用</h3><h4 id="_4-1-session-的钝化与活化" tabindex="-1"><a class="header-anchor" href="#_4-1-session-的钝化与活化" aria-hidden="true">#</a> 4.1 Session 的钝化与活化</h4><ul><li>Session 使用中可能存在的问题： <ul><li>第一次请求获取到的 Session 存储到服务器中；</li><li>服务器重启；</li><li>第二次请求时，Session 不存在了（影响用户体验）；</li></ul></li><li>钝化与活化的目的：为了存储 Session ，保证正常关闭下正常启启动时，同一会话有效；</li><li>钝化：服务器正常关闭时，Tomcat 会把 session 数据写入硬盘 work 目录下（sessions.ser）</li><li>活化：服务器启动时，Tomcat 读取 sessions.ser 中的数据，并删除该文件（避免磁盘空间浪费）；</li></ul><h4 id="_4-2-session-销毁" tabindex="-1"><a class="header-anchor" href="#_4-2-session-销毁" aria-hidden="true">#</a> 4.2 Session 销毁</h4><ul><li><p>自动销毁</p><ul><li><p>默认情况下无操作30分钟；</p></li><li><p>修改 web.xml 配置文件</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>display-name</span><span class="token punctuation">&gt;</span></span>Archetype Created Web Application<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>display-name</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>session-config</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>session-timeout</span><span class="token punctuation">&gt;</span></span>30<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>session-timeout</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>session-config</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>手动销毁</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>session<span class="token punctuation">.</span><span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="_5、总结" tabindex="-1"><a class="header-anchor" href="#_5、总结" aria-hidden="true">#</a> 5、总结</h3><ul><li>Cookie 与 Session 的作用：用来在会话中作共享数据、存储数据；</li></ul><table><thead><tr><th>不同点</th><th>Cookie</th><th>Session</th></tr></thead><tbody><tr><td>存储位置</td><td>Client</td><td>Server</td></tr><tr><td>存储时间</td><td>setMaxAge() 可以长期存储</td><td>默认 30 分钟</td></tr><tr><td>存储数据大小</td><td>最大 3KB</td><td>无限制</td></tr><tr><td>安全</td><td>不安全</td><td>安全</td></tr><tr><td>服务器性能影响</td><td>不占用服务器资源</td><td>占用服务器资源</td></tr></tbody></table><table><thead><tr><th>应用场景</th><th>Cookie</th><th>Session</th></tr></thead><tbody><tr><td>记住密码</td><td>√</td><td></td></tr><tr><td>验证码</td><td></td><td>√</td></tr><tr><td>登录名称</td><td></td><td>√</td></tr><tr><td>购物车</td><td>√</td><td></td></tr></tbody></table><h2 id="十五、filter" tabindex="-1"><a class="header-anchor" href="#十五、filter" aria-hidden="true">#</a> 十五、Filter</h2><h3 id="_1、filter-概述" tabindex="-1"><a class="header-anchor" href="#_1、filter-概述" aria-hidden="true">#</a> 1、Filter 概述</h3><ul><li>Web 三大组件：Servlet、Filter、Listener</li><li>File 是过滤器：可以把请求或者响应资源拦截下来</li></ul><h3 id="_2、快速入门-1" tabindex="-1"><a class="header-anchor" href="#_2、快速入门-1" aria-hidden="true">#</a> 2、快速入门</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@WebFilter</span><span class="token punctuation">(</span><span class="token string">&quot;/*&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FirstFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">FilterConfig</span> filterConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> resp<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> filterChain<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> username <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 放行</span>
        filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、filter-执行流程" tabindex="-1"><a class="header-anchor" href="#_3、filter-执行流程" aria-hidden="true">#</a> 3、Filter 执行流程</h3><ul><li>Filter 放行后访问资源，访问完成后有返回给 Filter</li></ul><h3 id="_4、filter-拦截路径" tabindex="-1"><a class="header-anchor" href="#_4、filter-拦截路径" aria-hidden="true">#</a> 4、Filter 拦截路径</h3><ul><li>拦截路径：表示需要拦截的资源</li><li>使用注解配置：<code>@WebFilter(&quot;&quot;)</code></li><li>配置如下： <ul><li>拦截具体资源：/login</li><li>拦截所有资源：/*</li><li>拦截后缀名：*.do，*.action</li><li>拦截目录名：/目录/*</li></ul></li></ul><h3 id="_5、过滤器链" tabindex="-1"><a class="header-anchor" href="#_5、过滤器链" aria-hidden="true">#</a> 5、过滤器链</h3><ul><li>先进后出原则</li><li>注意：具体的拦截优先级大于模糊拦截优先级</li></ul><h2 id="十六、listener" tabindex="-1"><a class="header-anchor" href="#十六、listener" aria-hidden="true">#</a> 十六、Listener</h2><h3 id="_1、概述-11" tabindex="-1"><a class="header-anchor" href="#_1、概述-11" aria-hidden="true">#</a> 1、概述</h3><ul><li>Listener：监听器，监听 application（ServletContext）、session、request 等对象的创建、销毁，元素的添加、删除是可以执行的功能组件；</li></ul><h3 id="_2、分类" tabindex="-1"><a class="header-anchor" href="#_2、分类" aria-hidden="true">#</a> 2、分类</h3><figure><img src="`+M+`" alt="监听器" tabindex="0" loading="lazy"><figcaption>监听器</figcaption></figure><ul><li><p>学习 ServletContextListener</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">contextInitialized</span><span class="token punctuation">(</span><span class="token class-name">ServletContextEvent</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">contextDestroyed</span><span class="token punctuation">(</span><span class="token class-name">ServletContextEvent</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="十七、ajax" tabindex="-1"><a class="header-anchor" href="#十七、ajax" aria-hidden="true">#</a> 十七、Ajax</h2><h3 id="_1、ajax-概述" tabindex="-1"><a class="header-anchor" href="#_1、ajax-概述" aria-hidden="true">#</a> 1、Ajax 概述</h3><ul><li><p>Ajax（Asynchronous JavaScript And XML）：可以发送异步请求</p></li><li><p>官网学习</p><figure><img src="`+T+'" alt="Ajax如何工作" tabindex="0" loading="lazy"><figcaption>Ajax如何工作</figcaption></figure></li><li><p>作用：</p><ul><li>发起异步请求，部分数据更新；</li><li>请求服务器获取服务器数据；</li></ul></li></ul><h3 id="_2、同步请求和一步请求" tabindex="-1"><a class="header-anchor" href="#_2、同步请求和一步请求" aria-hidden="true">#</a> 2、同步请求和一步请求</h3><figure><img src="'+R+'" alt="同步请求和异步请求" tabindex="0" loading="lazy"><figcaption>同步请求和异步请求</figcaption></figure><h3 id="_3、ajax-封装-——-axios" tabindex="-1"><a class="header-anchor" href="#_3、ajax-封装-——-axios" aria-hidden="true">#</a> 3、Ajax 封装 —— axios</h3>',246),H={href:"https://javascript.info/promise-basics",target:"_blank",rel:"noopener noreferrer"},O={href:"https://nodejs.org/",target:"_blank",rel:"noopener noreferrer"},P=n("code",null,"node.js",-1),I={href:"https://www.lullabot.com/articles/what-is-an-isomorphic-application",target:"_blank",rel:"noopener noreferrer"},D=n("code",null,"http",-1),N=e('<h2 id="十八、vue" tabindex="-1"><a class="header-anchor" href="#十八、vue" aria-hidden="true">#</a> 十八、Vue</h2><h3 id="_1、vue-概述" tabindex="-1"><a class="header-anchor" href="#_1、vue-概述" aria-hidden="true">#</a> 1、Vue 概述</h3><ul><li><p>官网学习；</p></li><li><p>Vue 是一款用于构建用户界面的 JavaScript 框架；</p><figure><img src="'+C+`" alt="MVVM" tabindex="0" loading="lazy"><figcaption>MVVM</figcaption></figure></li><li><p>Vue 使用数据的双向绑定</p></li></ul><h3 id="_2、快速开始-1" tabindex="-1"><a class="header-anchor" href="#_2、快速开始-1" aria-hidden="true">#</a> 2、快速开始</h3><ul><li><p>引入 vue.js 文件</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://unpkg.com/vue@3/dist/vue.global.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>编写视图</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    {{message}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>编写 JS 实现数据绑定</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;Hello Vue&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>完整代码</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>快速开始<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    {{message}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;Hello Vue&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_3、vue-实例" tabindex="-1"><a class="header-anchor" href="#_3、vue-实例" aria-hidden="true">#</a> 3、Vue 实例</h3><h4 id="_3-1-创建-vue-实例" tabindex="-1"><a class="header-anchor" href="#_3-1-创建-vue-实例" aria-hidden="true">#</a> 3.1 创建 Vue 实例</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 选项</span>
    <span class="token comment">// el: Vue 实例使用的根 DOM 元素 </span>
    <span class="token comment">// data: 数据</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-生命周期" tabindex="-1"><a class="header-anchor" href="#_3-2-生命周期" aria-hidden="true">#</a> 3.2 生命周期</h4><figure><img src="`+E+`" alt="Vue生命周期" tabindex="0" loading="lazy"><figcaption>Vue生命周期</figcaption></figure><ul><li>注意：只需要关注 mounted 挂载完成部分就可以 <ul><li>发送异步数据请求就可以实现数据的绑定</li></ul></li></ul><h3 id="_4、模板语法" tabindex="-1"><a class="header-anchor" href="#_4、模板语法" aria-hidden="true">#</a> 4、模板语法</h3><h4 id="_4-1-插值" tabindex="-1"><a class="header-anchor" href="#_4-1-插值" aria-hidden="true">#</a> 4.1 插值</h4><ul><li><p>文本：双大括号实现文本的插值</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>Message: {{ msg }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>v-once指令：一次性插值</li></ul></li></ul><h4 id="_4-2-指令" tabindex="-1"><a class="header-anchor" href="#_4-2-指令" aria-hidden="true">#</a> 4.2 指令</h4><ul><li><p>v-bind 指令：实现 Class 和 Style 的绑定</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 点击我 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>v-model 指令：表单输入绑定，在 <code>&lt;input&gt;</code> <code>&lt;textarea&gt;</code> <code>&lt;select&gt;</code> 元素上创建数据双向绑定</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    {{message}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 点击我 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>在修改数据<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_4-3-条件渲染" tabindex="-1"><a class="header-anchor" href="#_4-3-条件渲染" aria-hidden="true">#</a> 4.3 条件渲染</h4><ul><li><p>v-if</p></li><li><p>v-else-if</p></li><li><p>v-else</p></li><li><p>案例</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number == 1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>星期一<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number == 2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>星期二<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number == 3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>星期三<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number == 4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>星期四<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number == 5<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>星期五<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number == 6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>星期六<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>星期日<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>v-show：修改 style 控制是否隐藏</p></li></ul><h4 id="_4-4-列表渲染" tabindex="-1"><a class="header-anchor" href="#_4-4-列表渲染" aria-hidden="true">#</a> 4.4 列表渲染</h4><ul><li><p>v-for</p></li><li><p>案例</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in items<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.course<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            {{item.course}}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_4-5-事件处理" tabindex="-1"><a class="header-anchor" href="#_4-5-事件处理" aria-hidden="true">#</a> 4.5 事件处理</h4><ul><li><p>v-on</p></li><li><p>案例</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>counter += 1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> +1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>add<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 点击方法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>count: {{counter}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">counter</span><span class="token operator">:</span> <span class="token number">0</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token function-variable function">add</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>counter <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_4-6-常用指令" tabindex="-1"><a class="header-anchor" href="#_4-6-常用指令" aria-hidden="true">#</a> 4.6 常用指令</h4><table><thead><tr><th><strong>指令</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>v-bind</td><td>为HTML标签绑定属性值，如设置 href , css样式等</td></tr><tr><td>v-model</td><td>在表单元素上创建双向数据绑定</td></tr><tr><td>v-on</td><td>为HTML标签绑定事件</td></tr><tr><td>v-if</td><td>条件性的渲染某元素，判定为true时渲染,否则不渲染</td></tr><tr><td>v-else</td><td>条件性渲染某元素 执行 else语句</td></tr><tr><td>v-else-if</td><td>条件性渲染某元素 执行 else if语句 判断</td></tr><tr><td>v-show</td><td>根据条件展示某元素，区别在于切换的是display属性的值</td></tr><tr><td>v-for</td><td>列表渲染，遍历容器的元素或者对象的属性</td></tr></tbody></table><h2 id="十九、element" tabindex="-1"><a class="header-anchor" href="#十九、element" aria-hidden="true">#</a> 十九、Element</h2><h3 id="_1、概述-12" tabindex="-1"><a class="header-anchor" href="#_1、概述-12" aria-hidden="true">#</a> 1、概述</h3><ul><li>官网学习</li><li>饿了么公司前端基于 Vue 开发出来的一套组件库；</li></ul><h3 id="_2、快速使用" tabindex="-1"><a class="header-anchor" href="#_2、快速使用" aria-hidden="true">#</a> 2、快速使用</h3><ul><li><p>引入 JS 和 CSS</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../element-ui/lib/index.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../element-ui/lib/theme-chalk/index.css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建 Vue 实例</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table</span>
                <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tableData<span class="token punctuation">&quot;</span></span>
                <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 100%</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span>
                    <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>date<span class="token punctuation">&quot;</span></span>
                    <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>日期<span class="token punctuation">&quot;</span></span>
                    <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>180<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span>
                    <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span>
                    <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>姓名<span class="token punctuation">&quot;</span></span>
                    <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>180<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span>
                    <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>address<span class="token punctuation">&quot;</span></span>
                    <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>地址<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">tableData</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
                <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token string">&#39;2016-05-02&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;王小虎&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">&#39;上海市普陀区金沙江路 1518 弄&#39;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token string">&#39;2016-05-04&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;王小虎&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">&#39;上海市普陀区金沙江路 1517 弄&#39;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token string">&#39;2016-05-01&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;王小虎&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">&#39;上海市普陀区金沙江路 1519 弄&#39;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token string">&#39;2016-05-03&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;王小虎&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">&#39;上海市普陀区金沙江路 1516 弄&#39;</span>
            <span class="token punctuation">}</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_3、组件" tabindex="-1"><a class="header-anchor" href="#_3、组件" aria-hidden="true">#</a> 3、组件</h3><ul><li>表格 <ul><li>斑马条纹、带颜色</li><li>待复选带</li></ul></li><li>分页</li><li>对话框：dialog</li><li>按钮</li><li>单选框</li><li>多选框</li><li>输入框</li></ul><h3 id="_4、布局" tabindex="-1"><a class="header-anchor" href="#_4、布局" aria-hidden="true">#</a> 4、布局</h3><ul><li>Layout：将画布平分成 24 块</li><li>Container：容器布局</li></ul>`,33);function A(V,W){const s=i("ExternalLinkIcon");return l(),o("div",null,[J,n("ul",null,[n("li",null,[a("概述：Axios 是一个基于 "),n("em",null,[n("a",H,[a("promise"),t(s)])]),a(" 网络请求库，作用于"),n("a",O,[P,t(s)]),a(" 和浏览器中。 它是 "),n("em",null,[n("a",I,[a("isomorphic"),t(s)])]),a(" 的(即同一套代码可以运行在浏览器和node.js中)。在服务端它使用原生 node.js "),D,a(" 模块, 而在客户端 (浏览端) 则使用 XMLHttpRequests")])]),N])}const F=p(L,[["render",A],["__file","JavaWeb.html.vue"]]);export{F as default};
